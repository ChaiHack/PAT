#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
struct mooncake {
  float num, price, unit;//数量，总价，平均价
};
int cmp(mooncake a, mooncake b) {
  return a.unit > b.unit;
}
int main()
{
  int n, need;
  cin >> n >> need;
  vector<mooncake>a(n);
  for (int i = 0; i < n; i++)cin >> a[i].num;
  for (int i = 0; i < n; i++)cin >> a[i].price;
  for (int i = 0; i < n; i++)a[i].unit = a[i].price / a[i].num;
  sort(a.begin(), a.end(), cmp);
  float result = 0.0;
  for (int i = 0; i < n; i++)
  {
	if (a[i].num <= need)//月饼数量小于需求
	{
	  result += a[i].price;
	}
	else
	{
	  result += a[i].unit * need;
	  break;
	}
	need -= a[i].num;
  }
  printf("%.2f", result);
  return 0;
}
